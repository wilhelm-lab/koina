description: |
  <img src="images/Altimeter/altimeter_architecture_splines.svg" alt="Altimeter splines architecture" width="600px">  

  **Data**  
  Source of the data: The model was trained on the ProteomeTools dataset that was re-processed in-house, including both tryptic and non-tryptic spectra. The reprocessed dataset used for training included spectra from peptides digested with trypsin, LysC, AspN, and those representing HLA class I ligands.  
  Type of molecules: The training set included synthetic peptides covering both tryptic and non-tryptic protease products, including HLA peptides.  
  Representation of molecular complexity: The dataset spans a wide variety of peptide sequences with diverse amino acid compositions and cleavage patterns, including many relevant for immunopeptidomics.  
  Data acquisition: The data was acquired using one instrument (Orbitrap Fusion Lumos), with six different collision energies (20, 23, 25, 28, 30, 35).  
  Limitations of the training data: The model was trained only on peptides containing variable methionine oxidation and static carbamidomethylation of cysteines. Other PTMs or peptides containing free cysteines were not included.  
  False positives/negatives: The training data was filtered to 1% FDR at the spectrum level. Furthermore, spectra were filtered for a minimum isolation purity of 90%, MS1 isotope cosine similarity of ≥0.95, SAGE hyperscore ≥30, and ≤3 standard deviations from the predicted RT after a spline alignment to Chronologer predictions.  

  **Optimization**  
  Optimization target: The model was trained to predict the total abundance of each fragment ion (sum of all isotopes) across a continuous range of NCE values.  
  Experimental variability: No explicit comparison to experimental variability is provided, though normalized spectral angle was used to assess agreement with observed spectra.  
  Metric: The normalized spectral angle (SA) was used as the primary performance metric to compare predicted and experimental MS2 spectra.  

  **Model**  
  Interpretability: The model architecture predicts cubic B-spline coefficients and shares a fixed knot vector for all fragments. This enables efficient interpolation of fragment intensities across NCEs. The model also provides interpretable abundance profiles as functions of NCE.  
  Model type: Regression model outputting cubic B-spline coefficients for each fragment ion.  
  Limitations: The model is specific to HCD fragmentation on Orbitrap instruments and has only been validated in the NCE range of 20-40. It has not been formally evaluated for other fragmentation techniques or instruments, but performs well for Astral DIA analysis.  
  The model predicts fragment intensity across NCEs using splines and does not extrapolate outside the supported range.  

  **Evaluation**  
  Performance measures: The primary evaluation metric was the normalized spectral angle between predicted and observed spectra.  
  Choice of performance measures: Spectral angle was chosen because it is sensitive to overall spectral similarity and reflects prediction accuracy well across different peptides.  
  Single number performance: The model achieved a median normalized spectral angle of 0.941 on the test set.  
  Comparison to baseline methods: Performance is comparable to existing models like Prosit, though no direct comparison was made.  
  Evaluation methods: The dataset was split at the peptide level into 70% training, 20% validation, and 10% testing. The model was evaluated on the test set and benchmarked across diverse peptide types.  
  Model performance variability: The model shows consistent accuracy across different protease types and peptide lengths. Performance degrades slightly for long peptides and extreme precursor charges.  
  Data applicability: The model is applicable to tryptic and non-tryptic peptides with standard modifications (oxM, carbamidomethyl C) and NCE values within 20-40. It is not suitable for spectra acquired under other fragmentation methods or outside this NCE range.  

  **Input notes**  
  <ul><li>Length: 6-40 amino acids (6-30 recommended).</li> <li>Charge: 1-7 (1-4 recommended).</li> <li>PTMs: Variable oxidation of methionine (M[UNIMOD:35]), static carbamidomethylation of cysteine (C[UNIMOD:4]).</li>  </ul>
  **Output notes**  
  <ul> <li>Altimeter predicts cubic B-spline coefficients describing fragment intensity as a function of NCE (range 20-40).</li> <li>It outputs four spline coefficients per fragment (c0, c1, c2, c3), ordered across all fragments: first all c0s, then c1s, etc.</li> <li>Instead of string-based annotations, this model returns an integer index for each fragment, corresponding to the row in a predefined ion annotation dictionary.</li> <li>The ion index dictionary can be found at: <a target="_blank" href="data/Altimeter/ion_dictionary.txt">ion_dictionary.txt</a></li> <li>Knot positions are shared across all predictions.</li> <li> Splines can be evaluated with in python, for example: 
  <pre><code>import numpy as np
  from scipy.interpolate import BSpline
  knots = np.array([6, 6, 6, 6, 13, 21.97430419921875, 25.269433975219728, 33.01280212402344, 39.290992736816409, 48, 55, 55, 55, 55]) # Same for all splines
  coefficients = np.array([0, 0, 0, 1.0, 0.6, 0.4, 0.9, 0, 0, 0]) # middle four coefficients are output from Altimeter, the rest are 0
  s = BSpline(knots, coefficients, 3, extrapolate=False)</code></pre> </li> </ul> 
citation: |
  BioRxiv coming soon.

tag: "Fragment Intensity"

examples:
  inputs:
    [
      {
          "name": "peptide_sequences",
          "httpdtype": "BYTES",
          "shape": "[2,1]",
          "data": '["AAAAAKAK", "AC[UNIMOD:4]DEFGHIKLM[UNIMOD:35]NPQRSTVWY"]'
      },
      {
          "name": "precursor_charges",
          "httpdtype": "INT32",
          "shape": "[2,1]",
          "data": '[1,2]'
      }
    ]

description: |
  The peak intensity models were trained using timsTOF data from two different labs. This dataset
  includes peptides from JY (trypsin and elastase digests) and HeLa (trypsin digests), as well as
  HLA class I immunoprecipitation-enriched peptides from JY, HeLa, SK-MEL-37, and HL60 samples,
  with multiple collision energy settings applied.
  In total, 251,149 unique peptidoforms, considering sequence, charge, and modifications, were
  used for model training, ensuring comprehensive coverage of various peptide types. For each
  unique peptidoform, the highest-scoring PSM was retained for training, while 10,045 peptides
  were set aside for evaluation purposes.
  The data used for model training can be accessed through the following dataset identifiers. Data
  from JY immunopeptidomics used for training can be accessed with the dataset identifiers
  PXD043026 for ProteomeXchange and JPST002158 for jPOST. Data from the Carapito lab have been
  deposited to the ProteomeXchange repositories PXD046535 for HL60 immunopeptidomics and PXD046543
  for HeLa tryptic proteomics files.
  This model can be applied to tryptic, elastase, and HLA class I immunopeptide spectra acquired
  on timsTOF instruments.
  Find out more about this model <a href="https://github.com/compomics/ms2pip">here</a> and in
  the following publication:
  Gomez-Zepeda, D., Arnold-Schild, D., Beyrle, J., et al. (2024). Thunder-DDA-PASEF enables high-coverage immunopeptidomics and is boosted by MS2Rescore with MS2PIP timsTOF fragmentation prediction model. Nature Communications, 15, 2288. https://doi.org/10.1038/s41467-024-46380-y
  If you use predictions generated by this model please cite the following paper.
citation: |
  Updated MS²PIP web server supports cutting-edge proteomics applications.
  Declercq, A., Bouwmeester, R., Chiva, C., Sabidó, E., Hirschler, et al.
  Nucleic Acids Research doi:10.1093/nar/gkad335
tag: "Fragment intensity"
examples:
  inputs:
    [
      {
          "name": "peptide_sequences",
          "httpdtype": "BYTES",
          "data": '["ACDEK", "AAAAAAAAAAAAA"]',
          "shape": "[2,1]"
      },
      {
          "name": "precursor_charges",
          "httpdtype": "INT32",
          "data": '[2, 3]',
          "shape": "[2,1]"
      }
    ]
